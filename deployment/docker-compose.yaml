volumes:
  postgres_data:
  redis_data:

services:
  backend:
    container_name: backend
    build:
      context: ../
      dockerfile: deployment/build/Dockerfile
    restart:
      unless-stopped
    env_file:
       - ../.env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "8080:8080"

  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    restart: always
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql - need to use our migrations here
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/var/lib/redis/data
    ports:
      - "6379:6379"
  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 3

  kafka1:
    image: wurstmeister/kafka:latest
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092" 
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="topic1:1:1"
      - AUTO_CREATE_TOPICS_ENABLE="true"
