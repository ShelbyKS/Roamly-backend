version: '3.9'

volumes:
  postgres_data:
  redis_data:

services:
  backend:
    container_name: backend
    build:
      context: ../
      dockerfile: deployment/build/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
#      redis:
#        condition: service_started
    ports:
      - "8080:8080"

  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql - need to use our migrations here
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"

