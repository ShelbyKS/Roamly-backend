volumes:
  postgres_data:
  redis_data:
  kafka-data:

services:
  backend:
    container_name: backend
    build:
      context: ../
      dockerfile: cmd/app/Dockerfile
    restart:
      unless-stopped
    env_file:
       - ../.env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      kafka:
        condition: service_started
    ports:
      - "8080:8080"

  notifier:
    container_name: notifier
    build:
      context: ../
      dockerfile: cmd/notifier/Dockerfile
    restart:
      unless-stopped
    env_file:
      - ../.env
    depends_on:
      kafka:
        condition: service_started
    ports:
      - "8081:8081"

  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    restart: always
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/var/lib/redis/data
    ports:
      - "6379:6379"

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    volumes:
      - kafka-data:/bitnami/kafka/data
    env_file:
      - ../.env
    ports:
      - "9092:9092"
