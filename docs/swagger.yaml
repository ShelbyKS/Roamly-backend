definitions:
  dto.Geometry:
    properties:
      location:
        $ref: '#/definitions/internal_handler_dto.Location'
    type: object
  dto.GetEvent:
    properties:
      end_time:
        type: string
      id:
        type: string
      name:
        type: string
      place_id:
        type: string
      start_time:
        type: string
      trip_id:
        type: string
    type: object
  dto.GetUser:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      role:
        type: string
    type: object
  dto.InviteResponse:
    properties:
      access:
        type: string
      enable:
        type: boolean
      token:
        type: string
      trip_id:
        type: string
    type: object
  dto.PlaceGoogle:
    properties:
      editorial_summary:
        type: string
      formatted_address:
        type: string
      geometry:
        $ref: '#/definitions/dto.Geometry'
      name:
        type: string
      photos:
        items:
          $ref: '#/definitions/internal_handler_dto.Photo'
        type: array
      place_id:
        type: string
      rating:
        type: number
      recommended_duration:
        type: integer
      types:
        items:
          type: string
        type: array
      vicinity:
        type: string
    type: object
  dto.TripResponse:
    properties:
      area:
        $ref: '#/definitions/dto.PlaceGoogle'
      area_id:
        type: string
      end_time:
        type: string
      events:
        items:
          $ref: '#/definitions/dto.GetEvent'
        type: array
      id:
        type: string
      name:
        type: string
      places:
        items:
          $ref: '#/definitions/dto.PlaceGoogle'
        type: array
      recommended_places:
        items:
          $ref: '#/definitions/dto.PlaceGoogle'
        type: array
      start_time:
        type: string
      users:
        items:
          $ref: '#/definitions/dto.GetUser'
        type: array
    type: object
  handler.AddPlaceToTripRequest:
    properties:
      place_id:
        type: string
      trip_id:
        type: string
    required:
    - place_id
    - trip_id
    type: object
  handler.CreateEventRequest:
    properties:
      end_time:
        type: string
      name:
        type: string
      place_id:
        type: string
      start_time:
        type: string
      trip_id:
        type: string
    required:
    - end_time
    - start_time
    - trip_id
    type: object
  handler.CreateTripRequest:
    properties:
      area_id:
        type: string
      end_time:
        type: string
      name:
        type: string
      start_time:
        type: string
    required:
    - area_id
    - end_time
    - name
    - start_time
    type: object
  handler.DisableInvitationRequest:
    properties:
      access:
        type: string
      trip_id:
        type: string
    required:
    - access
    - trip_id
    type: object
  handler.EnableInvitationRequest:
    properties:
      access:
        type: string
      trip_id:
        type: string
    required:
    - access
    - trip_id
    type: object
  handler.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.RegisterRequest:
    properties:
      email:
        type: string
      login:
        type: string
      password:
        type: string
    required:
    - email
    - login
    - password
    type: object
  handler.UpdateEventRequest:
    properties:
      end_time:
        type: string
      id:
        type: string
      name:
        type: string
      start_time:
        type: string
    required:
    - id
    type: object
  handler.UpdateTripRequest:
    properties:
      end_time:
        type: string
      id:
        type: string
      name:
        type: string
      start_time:
        type: string
    required:
    - end_time
    - id
    - name
    - start_time
    type: object
  handler.UpdateUserRequest:
    properties:
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      password:
        type: string
    required:
    - email
    - id
    - login
    - password
    type: object
  internal_handler_dto.Location:
    properties:
      lat:
        type: number
      lng:
        type: number
    type: object
  internal_handler_dto.Photo:
    properties:
      photo_reference:
        type: string
    type: object
  model.Event:
    properties:
      endTime:
        type: string
      id:
        type: string
      name:
        type: string
      placeID:
        type: string
      startTime:
        type: string
      tripID:
        type: string
    type: object
  model.Geometry:
    properties:
      location:
        $ref: '#/definitions/model.Location'
    type: object
  model.GooglePlace:
    properties:
      editorial_summary:
        type: string
      formatted_address:
        type: string
      geometry:
        $ref: '#/definitions/model.Geometry'
      name:
        type: string
      photos:
        items:
          $ref: '#/definitions/model.Photo'
        type: array
      place_id:
        type: string
      rating:
        type: number
      types:
        items:
          type: string
        type: array
      vicinity:
        type: string
    type: object
  model.Location:
    properties:
      lat:
        type: number
      lng:
        type: number
    type: object
  model.Photo:
    properties:
      photo_reference:
        type: string
    type: object
  model.Place:
    properties:
      closing:
        type: string
      googlePlace:
        $ref: '#/definitions/model.GooglePlace'
      id:
        type: string
      opening:
        type: string
      recommendedVisitingDuration:
        type: integer
      trips:
        items:
          $ref: '#/definitions/model.Trip'
        type: array
    type: object
  model.Trip:
    properties:
      area:
        $ref: '#/definitions/model.Place'
      area_id:
        type: string
      end_time:
        type: string
      events:
        items:
          $ref: '#/definitions/model.Event'
        type: array
      id:
        type: string
      name:
        type: string
      places:
        items:
          $ref: '#/definitions/model.Place'
        type: array
      recommended_places:
        items:
          $ref: '#/definitions/model.Place'
        type: array
      start_time:
        type: string
      users:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      image_url:
        type: string
      login:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/check:
    get:
      description: Check if user is authenticated.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              body:
                properties:
                  user_id:
                    type: integer
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check auth
      tags:
      - user
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user with the provided credentials.
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              body:
                properties:
                  user_id:
                    type: integer
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Login a user
      tags:
      - user
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout a user. Delete session.
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Logout a user
      tags:
      - user
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              body:
                properties:
                  user_id:
                    type: integer
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "409":
          description: Conflict
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Register a new user
      tags:
      - user
  /api/v1/place:
    get:
      description: Find places by name or location
      parameters:
      - description: Name to search places by
        in: query
        name: name
        required: true
        type: string
      - description: Type of place
        in: query
        name: type
        type: string
      - description: Latitude for location-based search
        in: query
        name: lat
        type: string
      - description: Longitude for location-based search
        in: query
        name: lng
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of found places
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/model.Place'
              type: array
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get places
      tags:
      - place
  /api/v1/place/find:
    get:
      description: Find places by searchString
      parameters:
      - description: Search string to search places
        in: query
        name: searchString
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of found places
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/dto.PlaceGoogle'
              type: array
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Find places
      tags:
      - place
  /api/v1/place/photo:
    get:
      description: Get a photo of a place by photo reference
      parameters:
      - description: Photo reference ID
        in: query
        name: reference
        required: true
        type: string
      produces:
      - image/jpeg
      responses:
        "200":
          description: Binary image data of the place photo
          schema:
            type: file
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get place photo
      tags:
      - place
  /api/v1/trip:
    post:
      consumes:
      - application/json
      description: Create a new trip for the user
      parameters:
      - description: Trip data
        in: body
        name: trip
        required: true
        schema:
          $ref: '#/definitions/handler.CreateTripRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new trip
      tags:
      - trip
    put:
      consumes:
      - application/json
      description: Update trip data
      parameters:
      - description: Trip data
        in: body
        name: trip
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateTripRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Trip'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update trip
      tags:
      - trip
  /api/v1/trip/:
    get:
      description: Get list trips
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Trip'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get trips
      tags:
      - trip
  /api/v1/trip/{trip_id}:
    delete:
      description: Delete a trip by its ID
      parameters:
      - description: Trip ID
        in: path
        name: trip_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: "null"
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a trip
      tags:
      - trip
    get:
      description: Get data of a specific trip by its ID
      parameters:
      - description: Trip ID
        in: path
        name: trip_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Trip'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get trip by ID
      tags:
      - trip
  /api/v1/trip/{trip_id}/event:
    delete:
      consumes:
      - application/json
      description: Delete all events by trip ID
      parameters:
      - description: Trip ID
        in: query
        name: trip_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete trip events
      tags:
      - event
  /api/v1/trip/{trip_id}/invite:
    get:
      description: Get trip invite tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/dto.InviteResponse'
              type: array
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Trip invitations
      tags:
      - invite
  /api/v1/trip/{trip_id}/place/{place_id}:
    delete:
      consumes:
      - application/json
      description: Delete place from a specific trip by their IDs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TripResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete place from trip
      tags:
      - place
  /api/v1/trip/{trip_id}/schedule:
    post:
      description: Schedule places in trip
      parameters:
      - description: Trip ID
        in: path
        name: trip_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Trip'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Schedule trip
      tags:
      - trip
  /api/v1/trip/{trip_id}/schedule/auto:
    post:
      description: Schedule places in trip
      parameters:
      - description: Trip ID
        in: path
        name: trip_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Trip'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Schedule trip
      tags:
      - trip
  /api/v1/trip/event:
    delete:
      consumes:
      - application/json
      description: Delete an event by ID
      parameters:
      - description: Event ID
        in: query
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete event
      tags:
      - event
    get:
      consumes:
      - application/json
      description: Get event by ID
      parameters:
      - description: Event ID
        in: query
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Event'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get event
      tags:
      - event
    post:
      consumes:
      - application/json
      description: Create a new event
      parameters:
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/handler.CreateEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.GetEvent'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create event
      tags:
      - event
    put:
      consumes:
      - application/json
      description: Update event data
      parameters:
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Event'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update event
      tags:
      - event
  /api/v1/trip/invite:
    delete:
      consumes:
      - application/json
      description: Disable trip invitation by access
      parameters:
      - description: Invitation data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/handler.DisableInvitationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Disable trip invitation
      tags:
      - invite
    post:
      consumes:
      - application/json
      description: Enable trip invitation by access
      parameters:
      - description: Invitation data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/handler.EnableInvitationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'invite_token: bla_bla'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Enable trip invitation
      tags:
      - invite
  /api/v1/trip/join/{invite_token}:
    post:
      consumes:
      - application/json
      description: Join trip via invite_token
      parameters:
      - description: Invite token
        in: path
        name: event
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'trip_id: bla_bla'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Join trip
      tags:
      - invite
  /api/v1/trip/place:
    post:
      consumes:
      - application/json
      description: Add a place to a specific trip by their IDs
      parameters:
      - description: JSON containing trip and place IDs
        in: body
        name: trip-place
        required: true
        schema:
          $ref: '#/definitions/handler.AddPlaceToTripRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TripResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add place to trip
      tags:
      - place
  /api/v1/user:
    put:
      consumes:
      - application/json
      description: Updates the details of an existing user.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            properties:
              err:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              err:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              err:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              err:
                type: string
            type: object
      summary: Update user details
      tags:
      - user
  /api/v1/user/{user_id}:
    get:
      description: Retrieves a user by their ID.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - user
swagger: "2.0"
